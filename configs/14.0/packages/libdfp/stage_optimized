#!/usr/bin/env bash
#
# Copyright 2017 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

source ${AT_BASE}/scripts/utilities/bitsize_selection.sh

# LIBDFP build parameters for stage 1 32 bits
# ===========================================


# Tell the build system to hold the temp install folder
ATCFG_HOLD_TEMP_INSTALL='no'
# Tell the build system to hold the temp build folder
ATCFG_HOLD_TEMP_BUILD='no'
# Build in a new directory
ATCFG_BUILD_STAGE_T='dir'
#

atcfg_configure() {
	local base_libdir=$(find_build_libdir ${AT_BIT_SIZE})
	local base_target=$(find_build_target ${AT_BIT_SIZE})
	PATH=${at_dest}/bin:${PATH} \
	AUTOCONF="${autoconf}" \
	CC="${at_dest}/bin/gcc" \
	CXX="${at_dest}/bin/g++" \
	CFLAGS="-Wl,-zrelro -g -O3 -m${AT_BIT_SIZE}" \
	CXXFLAGS="-g -O3 -m${AT_BIT_SIZE}" \
	${ATSRC_PACKAGE_WORK}/configure \
		--build=${base_target} \
		--host=${base_target} \
		--prefix="${at_dest}" \
		--libdir="${at_dest}/${base_libdir}" \
		--includedir="${at_dest}/include" \
		--with-backend=libdecnumber \
		--enable-decimal-float=dpd \
		--with-cpu=${AT_OPTIMIZE_CPU/ppc/}
}

atcfg_make() {
	PATH=${at_dest}/bin:${PATH} ${SUB_MAKE}
}

atcfg_make_check() {
	# Package testing not done on cross build
	if [[ "${cross_build}" == 'no' ]]; then
		PATH=${at_dest}/bin:${PATH} ${SUB_MAKE} check
	fi
}

atcfg_install() {
	PATH=${at_dest}/bin:${PATH} \
	install_root=${install_place} \
	${SUB_MAKE} install
}


atcfg_post_install() {
	local base_libdir=$(find_build_libdir ${AT_BIT_SIZE})
	# Save all libraries into a tar file
	pushd "${install_place}/${at_dest}/${base_libdir}"
	tar czf "${install_place}/${AT_OPTIMIZE_CPU}.tar.gz" \
		$(find . -name "*.so" -o -name "*.so.*" -o -name "*.a")
	popd
	# Remove all installed built files
	rm -rf "${install_place}/${at_dest}"
	# Create processor lib target
	mkdir -p "${install_place}/${at_dest}/${base_libdir}/${AT_OPTIMIZE_CPU}"
	# Place saved libs on created final target
	pushd "${install_place}/${at_dest}/${base_libdir}/${AT_OPTIMIZE_CPU}"
	tar xzf "${install_place}/${AT_OPTIMIZE_CPU}.tar.gz"
	popd
	set +e
}
