#!/usr/bin/env bash
#
# Copyright 2017 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# binutils build parameters for stage 1
# =====================================
#

ATCFG_HOLD_TEMP_INSTALL='no'
ATCFG_HOLD_TEMP_BUILD='no'
# Build in a new directory
ATCFG_BUILD_STAGE_T='dir'

# Conditional configure command
atcfg_configure() {
	if [[ "${cross_build}" == "no" ]]; then
		sysroot=/
	else
		sysroot=${dest_cross}
	fi

	CC=${system_cc} \
	CFLAGS="-g -O" \
	CXXFLAGS="-g -O" \
	${ATSRC_PACKAGE_WORK}/configure --build=${host} \
					--host=${host} \
					--target=${target} \
					${alternate_target:+--enable-targets=${alternate_target}} \
					--with-sysroot=${sysroot} \
					--prefix=${at_dest} \
					--disable-gdb \
					--disable-readline \
					--disable-libdecnumber \
					--disable-sim \
					--disable-nls

}

# Make command for build
atcfg_make() {
	${SUB_MAKE} all
}

# atcfg_make_check() done at stage_2

# Install command for build
atcfg_install() {
	make install DESTDIR=${install_place}
}

# Post install settings or commands to run
atcfg_post_install() {
	# Create the required symlinks to install, which are a requirement for
	# cross builds, but now, we are assuming that every build should have the
	# triple shortcut installed. So, create binutils ${target(32|64)}-* symlinks
	pushd ${install_place}/${at_dest}/bin
	for CMD in addr2line ar as c++filt ld nm objcopy objdump ranlib size strings strip; do
		if [[ -x ${CMD} ]] && [[ ! -e ${target32}-${CMD} ]]; then
			ln -sfn ${CMD} ${target32}-${CMD}
		fi
	done
	for CMD in addr2line ar c++filt nm objcopy objdump ranlib size strings strip; do
		if [[ -x ${CMD} ]] && [[ ! -e ${target64}-${CMD} ]]; then
			ln -sfn ${CMD} ${target64}-${CMD}
		fi
	done
	if [[ "${target}" == "${target64}" ]]; then
		if [[ ! -e ${target64}-as ]]; then
			echo -e "#!/bin/bash\nexec ${at_dest}/bin/as \"${@}\"" > ${target64}-as
			chmod a+x ${target64}-as
		fi
		if [[ ! -e ${target64}-ld ]]; then
			echo -e "#!/bin/bash\nexec ${at_dest}/bin/ld \"${@}\"" > ${target64}-ld
			chmod a+x ${target64}-ld
		fi
	fi
	# This was needed to fix the cross build which defaults to ${target64}
	# target. So, create binutils ${target32}-* symlinks
	for CMD in addr2line ar as c++filt elfedit embedspu gprof ld nm objcopy objdump ranlib readelf size strings strip; do
		if [[ -x ${target64}-${CMD} ]] && \
		   [[ ! -f ${target32}-${CMD} ]]; then
			ln -sfn ${target64}-${CMD} ${target32}-${CMD}
		fi
	done
	popd
}
