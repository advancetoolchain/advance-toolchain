#! /usr/bin/expect
# Copyright 2019 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# Check if Glibc has SDTs defined.

source shared.exp

if { $env(AT_MAJOR_VERSION) < 11.0 } {
    printit "Skipping: systemtap isn't enabled on version older than AT 11.0"
    exit $ENOSYS
}


proc check_systemtap {readelf lib} {
	global WARNING
	global ERROR
	if {[catch {exec $readelf --notes $lib | grep stapsdt}]} {
		printit "Could not find systemtap probes in $lib" $ERROR
		return 1
	} else {
		printit "Systemtap probes found in $lib" $WARNING
		return 0
	}
}

set ret 0
set readelf_exe [compiler_path readelf]

if { $env(AT_CROSS_BUILD) == "yes" } {
	if { $env(AT_BUILD_ARCH) == "ppc64le" } {
		set install_prefix "$env(AT_DEST)/$env(AT_BUILD_ARCH)"
	} else {
		set install_prefix "$env(AT_DEST)/ppc"
	}
} else {
	set install_prefix $env(AT_DEST)
}

if { $TARGET32 } {
	set lib [glob $install_prefix/lib/libpthread-*.so]
	if {[check_systemtap $readelf_exe $lib]} {
		set ret 1
	}
}
if { $TARGET64 } {
	set lib [glob $install_prefix/lib64/libpthread-*.so]
	if {[check_systemtap $readelf_exe $lib]} {
		set ret 1
	}
}

exit $ret
