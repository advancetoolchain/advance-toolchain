#! /usr/bin/expect
# Copyright 2017 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# Check if golang can run a simple program.
#

set at_dir $env(AT_DEST)
set go_root /usr/local/go/
set rc 0

source ./shared.exp

if {[info exists env(AT_WD)]} {
	printit "Skipping : running test suite on a compatible mode with the \
build system.\t\[SUCCESS\]"
	exit $ENOSYS
}

if { $env(AT_MAJOR_VERSION) < 9.0 } {
	printit "Golang is not supported prior to AT 9.0.\t\[SUCCESS\]"
	exit $ENOSYS
}
if { $env(AT_CROSS_BUILD) == "yes" } {
	printit "Golang tests not supported in the cross compiler.\t\[SUCCESS\]"
	exit $ENOSYS
}
if { $env(AT_BUILD_ARCH) != "ppc64le" } {
	printit "Golang is only supported on ppc64le.\t\[SUCCESS\]"
	exit $ENOSYS
}
if { ![file isdirectory $go_root] } {
	printit "Error: go directory $go_root is missing."
	exit 1
}

set go $go_root/bin/go

printit "Running golang tests..."

if { ![file exists $go_root/bin/gofmt] } {
	printitcont "Error:  File \
$go_root/bin/gofmt is missing."
	set rc 1
}

printit "Running test with $go..."

spawn $go run $FULLPATH/test.go

# Check the output for suspicious strings
expect {
	-re ".*FAIL.*" { fvtr_error "golang test failed" }
	-re ".*fail.*" { fvtr_error "golang test failed" }
	-re ".*error.*" { fvtr_error "golang test failed" }
	eof { }

	printit "\n\t\t\t\t\t\[SUCCESS\]"
}

exit $rc
