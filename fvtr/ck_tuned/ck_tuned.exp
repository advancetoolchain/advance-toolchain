#!/usr/bin/expect
#
# Check if all tuned shared libraries are available.

source shared.exp

check_minimum_version 7.0 "Tuned libraries had different settings prior to AT 7.0."

if { $env(AT_CROSS_BUILD) == "yes" } {
	printit "AT doesn't distribute tuned libraries in the cross compiler."
	exit ${ENOSYS}
}

# List of libraries to check for availability.
set libs {libc.so libcrypto.so libdfp.so libgcc_s.so libz.so}
set libs2 {}

# AT 15.0 moved processor-optimized libraries into glibc-hwcaps subdirectories.
set hwcaps ""
if { $::env(AT_MAJOR_VERSION) >= 15.0 } {
	set hwcaps glibc-hwcaps/
}

# Firstly, list the files affecting BZ #96899.
# In this scenario, we have to provide a directory for the processor required
# by the loader with symlinks inside it, i.e. BUILD_LOAD_ARCH.
if { $TARGET32 } {
	set dir $env(AT_DEST)/lib/$env(AT_BUILD_LOAD_ARCH)
	lappend libs2 ${dir}
	foreach lib ${libs} {
		lappend libs2 ${dir}/${lib}
	}
}
if { $TARGET64 } {
	set dir $env(AT_DEST)/lib64/$env(AT_BUILD_LOAD_ARCH)
	lappend libs2 ${dir}
	foreach lib ${libs} {
		lappend libs2 ${dir}/${lib}
	}
}

# Now, list the real tuned libraries.
foreach processor $env(AT_OPTMD_LIBS) {
	if { $TARGET32 } {
		set dir $env(AT_DEST)/lib/${hwcaps}${processor}
		lappend libs2 ${dir}
		foreach lib ${libs} {
			lappend libs2 ${dir}/${lib}
		}
	}
	if { $TARGET64 } {
		set dir $env(AT_DEST)/lib64/${hwcaps}${processor}
		lappend libs2 ${dir}
		foreach lib ${libs} {
			lappend libs2 ${dir}/${lib}
		}
	}
}

set rc 0
foreach lib ${libs2} {
	if {![file exists ${lib}]} {
		set rc 1
		printit "Error: Couldn't find ${lib}"
	} else {
		printit "Found ${lib}"
	}
}

if { $rc == 0 } {
	printit "Tuned libraries are available:\t\t\t\[SUCCESS\]"
}
exit $rc
